services:
  # Redis for Celery broker, result backend, and pub/sub
  redis:
    image: redis:7-alpine
    container_name: stockanalysis-redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes", "--databases", "16"]
    volumes:
      - redis_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB for persistent storage
  mongodb:
    image: mongo:7
    container_name: stockanalysis-mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE: stockanalysis
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Flower for Celery monitoring
  flower:
    image: mher/flower:latest
    container_name: stockanalysis-flower
    ports:
      - "5555:5555"
    environment:
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/1
    depends_on:
      redis:
        condition: service_healthy
    restart: unless-stopped

  # Celery worker for task execution
  worker:
    build: .
    container_name: stockanalysis-worker
    command: uv run celery -A core.celery_app.celery_app worker --loglevel=INFO --pool=prefork --concurrency=9
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MONGODB_HOST: mongodb
      MONGODB_PORT: 27017
      MONGODB_DATABASE: stockanalysis
      PYTHONPATH: /app
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    restart: unless-stopped

  # Celery beat for periodic task scheduling
  beat:
    build: .
    container_name: stockanalysis-beat
    command: uv run celery -A core.celery_app.celery_app beat --loglevel=INFO
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      MONGODB_HOST: mongodb
      MONGODB_PORT: 27017
      MONGODB_DATABASE: stockanalysis
      PYTHONPATH: /app
    volumes:
      - .:/app
    depends_on:
      redis:
        condition: service_healthy
      mongodb:
        condition: service_healthy
    restart: unless-stopped

volumes:
  redis_data:
    driver: local
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local


